swagger: "2.0"
info:
  version: 1.0.0
  title: "preparazione2"
  description: A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: foo@example.com
    url: http://madskristensen.net
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: petstore.swagger.io
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /astronauts:
    get:
      description: |
        return astronauts.
      operationId: getAllAstronauts
      responses:
        200:
          description: astronauts response
          schema:
            type: array
            items:
              $ref: '#/definitions/astronauts'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new astronauts.  Duplicates are allowed
      operationId: addAstronauts
      parameters:
        - name: astronauts
          in: body
          description: astronauts to add to the store
          required: true
          schema:
            $ref: '#/definitions/NewAstronauts'
      responses:
        200:
          description: astronauts response
          schema:
            $ref: '#/definitions/astronauts'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /astronauts/{id}:
    get:
      description: Returns astronauts based on a single ID
      operationId: getAstronautsID
      parameters:
        - name: id
          in: path
          description: ID of astronauts to fetch
          required: true
          type: string
      responses:
        200:
          description: astronauts response
          schema:
            $ref: '#/definitions/astronauts'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      description: put a single pet based on the ID supplied
      operationId: putAstronauts
      parameters:
        - name: id
          in: path
          description: ID of astronauts to modify
          required: true
          type: string
      responses:
        200:
          description: astronauts modified
        404:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  astronauts:
    allOf:
      - $ref: '#/definitions/NewAstronauts'
      - required:
        - id
        properties:
          id:
            type: string
  NewAstronauts:
    required:
      - name
    properties:
      name:
        type: string
      tag:
        type: string
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string